# 1 "lib\\ES\\src\\ES.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "lib\\ES\\src\\ES.cpp"
# 1 "lib\\ES\\src\\ES.h" 1



# 1 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\lib\\gcc\\avr\\5.4.0\\include\\stdint.h" 1 3 4
# 9 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\lib\\gcc\\avr\\5.4.0\\include\\stdint.h" 3 4
# 1 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\avr\\include\\stdint.h" 1 3 4
# 125 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\avr\\include\\stdint.h" 3 4

# 125 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\avr\\include\\stdint.h" 3 4
typedef signed int int8_t __attribute__((__mode__(__QI__)));
typedef unsigned int uint8_t __attribute__((__mode__(__QI__)));
typedef signed int int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int uint16_t __attribute__ ((__mode__ (__HI__)));
typedef signed int int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int uint32_t __attribute__ ((__mode__ (__SI__)));

typedef signed int int64_t __attribute__((__mode__(__DI__)));
typedef unsigned int uint64_t __attribute__((__mode__(__DI__)));
# 146 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\avr\\include\\stdint.h" 3 4
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;
# 163 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\avr\\include\\stdint.h" 3 4
typedef int8_t int_least8_t;




typedef uint8_t uint_least8_t;




typedef int16_t int_least16_t;




typedef uint16_t uint_least16_t;




typedef int32_t int_least32_t;




typedef uint32_t uint_least32_t;







typedef int64_t int_least64_t;






typedef uint64_t uint_least64_t;
# 217 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\avr\\include\\stdint.h" 3 4
typedef int8_t int_fast8_t;




typedef uint8_t uint_fast8_t;




typedef int16_t int_fast16_t;




typedef uint16_t uint_fast16_t;




typedef int32_t int_fast32_t;




typedef uint32_t uint_fast32_t;







typedef int64_t int_fast64_t;






typedef uint64_t uint_fast64_t;
# 277 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\avr\\include\\stdint.h" 3 4
typedef int64_t intmax_t;




typedef uint64_t uintmax_t;
# 10 "c:\\users\\master\\.platformio\\packages\\toolchain-atmelavr\\lib\\gcc\\avr\\5.4.0\\include\\stdint.h" 2 3 4
# 5 "lib\\ES\\src\\ES.h" 2


# 6 "lib\\ES\\src\\ES.h"
typedef void (*es_handler_t) ();
# 18 "lib\\ES\\src\\ES.h"
class ESClass
{
private:
    volatile uint8_t head;
    volatile uint8_t tail;
    volatile uint8_t count;
    volatile uint8_t events[30];
    volatile es_handler_t handlers[30];
public:
    ESClass();







    void attach(uint8_t code, void (*handler_ptr) ());






    void detach(uint8_t code);






    void trigger(uint8_t code);




    void dispatch();
};

extern ESClass ES;
# 2 "lib\\ES\\src\\ES.cpp" 2



ESClass::ESClass() {
    this->head = 0;
    this->tail = 0;
    this->count = 0;
}

void ESClass::attach(uint8_t code, void (*handler_ptr) ()) {
    if (code < 30) {
        this->handlers[code] = handler_ptr;
    }
}

void ESClass::detach(uint8_t code) {
    if (code < 30) {
        this->handlers[code] = 0;
    }
}

void ESClass::trigger(uint8_t code) {
    if (code < 30 && this->count < 30) {
        this->events[this->tail] = code;
        this->tail++;

        if (this->tail == 30) {
            this->tail = 0;
        }

        this->count++;
    }
}

void ESClass::dispatch() {
    if (this->count > 0) {
        uint8_t code = this->events[this->head];

        this->count--;
        this->head++;

        if (this->head == 30) {
            this->head = 0;
        }

        if (this->handlers[code]) {
            this->handlers[code]();
        }
    }
}

ESClass ES;
